openapi: "3.0.3"
info:
  title: Shop Manager Service
  description: Api for the shop managment
  version: "1.0.0"

servers:
  - url: https://api.server.test/v1

paths:
  /items:
    get:
      summary: Fetch list of products
      responses:
        200:
          description: Sucsessful pull of items info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Nothing was found
    post:
      summary: Add product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Returns values of sucsessfuly added item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'

  /items/{itemCode}:
    parameters:
      - name: itemCode
        in: path
        required: true
        description: ID number of item coresponding to DB
        schema:
          type: integer
          example: 10

    put:
      summary: Update spacific product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Returns values of sucsessfuly updayed item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Nothing was found

    delete:
      summary: Delete spacific product
      responses:
        200:
          description: Sucsessful deletions of item by id
        400:
          description: Nothing was found

components:
  schemas:
    item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "broom"
        price:
          type: integer
          example: 100
        quantati:
          type: integer
          example: 10
      required:
        - id
        - name
        - price
        - quantati